{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Linux_Skills \u00b6 Documentation: https://zhz03.github.io/Linux_Skills GitHub: https://github.com/zhz03/Linux_Skills Free software: MIT Features \u00b6 TODO Content \u00b6 Installation Ubuntu: How to setup New Ubunutu How to install ROS How to install Anaconda Touchpad_support_gesture How to create alias Raspberry Pi: Install Raspberry Pi without monitor","title":"Home"},{"location":"#linux_skills","text":"Documentation: https://zhz03.github.io/Linux_Skills GitHub: https://github.com/zhz03/Linux_Skills Free software: MIT","title":"Linux_Skills"},{"location":"#features","text":"TODO","title":"Features"},{"location":"#content","text":"Installation Ubuntu: How to setup New Ubunutu How to install ROS How to install Anaconda Touchpad_support_gesture How to create alias Raspberry Pi: Install Raspberry Pi without monitor","title":"Content"},{"location":"api/","text":"Top-level package for zzl_mkdoc_sample.","title":"Api"},{"location":"installation/","text":"Installation \u00b6 From source \u00b6 The source for LInux_skills can be downloaded from the [Github repo][https://github.com/zhz03/Linux_Skills]. You can clone the public repository: $ git clone https://github.com/zhz03/Linux_Skills.git","title":"Installation"},{"location":"installation/#installation","text":"","title":"Installation"},{"location":"installation/#from-source","text":"The source for LInux_skills can be downloaded from the [Github repo][https://github.com/zhz03/Linux_Skills]. You can clone the public repository: $ git clone https://github.com/zhz03/Linux_Skills.git","title":"From source"},{"location":"usage/","text":"Usage \u00b6 To use zzl_mkdoc_sample in a project import zzl_mkdoc_sample","title":"Usage"},{"location":"usage/#usage","text":"To use zzl_mkdoc_sample in a project import zzl_mkdoc_sample","title":"Usage"},{"location":"raspberryPi/Install_Raspberry_Pi_without_monitor/","text":"Install Raspberry Pi without monitor \u00b6 Step 1: Download Raspi imager \u00b6 Step 2: Prepare your system card \u00b6 Step 3: Set up the boot folder \u00b6 Step 4: Set up the raspberry pi configuration \u00b6 Step 5: Make connection \u00b6 5.1 Find out the IP address of your Raspberry Pi \u00b6 Download, install ip scanner: Windows: Advanced IP Scanner Linux: Angry IP Scanner MAC: Angry IP Scanner Use IP Scanner to find out the ip address of your Raspberry Pi device remember this IP address: 192.168.1.42 we will need this later. 5.2 VNC viewer \u00b6 Download, install and launch VNC Viewer In the VNC Viewer","title":"Install Raspberry Pi without monitor"},{"location":"raspberryPi/Install_Raspberry_Pi_without_monitor/#install-raspberry-pi-without-monitor","text":"","title":"Install Raspberry Pi without monitor"},{"location":"raspberryPi/Install_Raspberry_Pi_without_monitor/#step-1-download-raspi-imager","text":"","title":"Step 1: Download Raspi imager"},{"location":"raspberryPi/Install_Raspberry_Pi_without_monitor/#step-2-prepare-your-system-card","text":"","title":"Step 2: Prepare your system card"},{"location":"raspberryPi/Install_Raspberry_Pi_without_monitor/#step-3-set-up-the-boot-folder","text":"","title":"Step 3: Set up the boot folder"},{"location":"raspberryPi/Install_Raspberry_Pi_without_monitor/#step-4-set-up-the-raspberry-pi-configuration","text":"","title":"Step 4: Set up the raspberry pi configuration"},{"location":"raspberryPi/Install_Raspberry_Pi_without_monitor/#step-5-make-connection","text":"","title":"Step 5: Make connection"},{"location":"raspberryPi/Install_Raspberry_Pi_without_monitor/#51-find-out-the-ip-address-of-your-raspberry-pi","text":"Download, install ip scanner: Windows: Advanced IP Scanner Linux: Angry IP Scanner MAC: Angry IP Scanner Use IP Scanner to find out the ip address of your Raspberry Pi device remember this IP address: 192.168.1.42 we will need this later.","title":"5.1 Find out the IP address of your Raspberry Pi"},{"location":"raspberryPi/Install_Raspberry_Pi_without_monitor/#52-vnc-viewer","text":"Download, install and launch VNC Viewer In the VNC Viewer","title":"5.2 VNC viewer"},{"location":"ubuntu/How_to_create_alias/","text":"How to create a alias for commands \u00b6 Steps to create a permanent Bash alias: \u00b6 Open the Terminal app and then type the following commands: Edit the ~/.bash_aliases or ~/.bashrc (recommended) file using a text editor: vi ~/.bash_aliases# or #nano ~/.bashrc Append your bash alias For example append: alias update='sudo apt update' alias open='nautilus' where, update is your command alias Save and close the file. Activate alias by typing the following source command : source ~/.bash_aliases WARNING! Please note that ~/.bash_aliases file only works if the following line presents in the ~/.bashrc file: if [ -f ~/.bash_aliases ]; then . ~/.bash_aliases fi Are above lines are missing in your ~/.bashrc file? Just append at the end of the ~/.bashrc, using a text editor such as vi/vim or joe. See ~/.bash_aliases wiki page for more info.","title":"How to create alias"},{"location":"ubuntu/How_to_create_alias/#how-to-create-a-alias-for-commands","text":"","title":"How to create a alias for commands"},{"location":"ubuntu/How_to_create_alias/#steps-to-create-a-permanent-bash-alias","text":"Open the Terminal app and then type the following commands: Edit the ~/.bash_aliases or ~/.bashrc (recommended) file using a text editor: vi ~/.bash_aliases# or #nano ~/.bashrc Append your bash alias For example append: alias update='sudo apt update' alias open='nautilus' where, update is your command alias Save and close the file. Activate alias by typing the following source command : source ~/.bash_aliases WARNING! Please note that ~/.bash_aliases file only works if the following line presents in the ~/.bashrc file: if [ -f ~/.bash_aliases ]; then . ~/.bash_aliases fi Are above lines are missing in your ~/.bashrc file? Just append at the end of the ~/.bashrc, using a text editor such as vi/vim or joe. See ~/.bash_aliases wiki page for more info.","title":"Steps to create a permanent Bash alias:"},{"location":"ubuntu/How_to_install_Anaconda/","text":"How to install Anaconda \u00b6 Prerequisite \u00b6 ROS needs to install first Step-by-step process \u00b6 Step1: go to the anaconda website: https://www.anaconda.com/products/individual#Downloads Step2: Navigate to your Downloads folder and type the follow command: bash Anaconda3-2020.11-Linux-x86_64.sh Step3: Now when you try to type the following command to launch anaconda: anaconda-navigator You will get response \"command not found\" Use the following command to add the anaconda3 paht to environment: export PATH=/home/yourusername/anaconda3/bin:$PATH Now you can manually launch anaconda-navigator from your terminal Step4: Create Anaconda Navigator shortcut/icon. You can check the website . I will put the simplified steps here: Use your terminal and go to your Desktop and create cd Desktop gedit anaconda-navigator.desktop In your text editor and enter following contents Replace zhz03 to your username #!/usr/bin/env xdg-open [Desktop Entry] Name=Anaconda Version=2.0 Type=Application Exec=/home/nxp/anaconda3/bin/anaconda-navigator Icon=/home/nxp/anaconda3/lib/python3.8/site-packages/anaconda_navigator/static/images/anaconda-icon-256x256.png Comment=Open Anaconda Navigator Terminal=false Copy this file to your application folder cp anaconda-navigator.desktop ~/.local/share/applications/ Now you'll see your Anaconda navigator on your application menu/list","title":"How to install Anaconda"},{"location":"ubuntu/How_to_install_Anaconda/#how-to-install-anaconda","text":"","title":"How to install Anaconda"},{"location":"ubuntu/How_to_install_Anaconda/#prerequisite","text":"ROS needs to install first","title":"Prerequisite"},{"location":"ubuntu/How_to_install_Anaconda/#step-by-step-process","text":"Step1: go to the anaconda website: https://www.anaconda.com/products/individual#Downloads Step2: Navigate to your Downloads folder and type the follow command: bash Anaconda3-2020.11-Linux-x86_64.sh Step3: Now when you try to type the following command to launch anaconda: anaconda-navigator You will get response \"command not found\" Use the following command to add the anaconda3 paht to environment: export PATH=/home/yourusername/anaconda3/bin:$PATH Now you can manually launch anaconda-navigator from your terminal Step4: Create Anaconda Navigator shortcut/icon. You can check the website . I will put the simplified steps here: Use your terminal and go to your Desktop and create cd Desktop gedit anaconda-navigator.desktop In your text editor and enter following contents Replace zhz03 to your username #!/usr/bin/env xdg-open [Desktop Entry] Name=Anaconda Version=2.0 Type=Application Exec=/home/nxp/anaconda3/bin/anaconda-navigator Icon=/home/nxp/anaconda3/lib/python3.8/site-packages/anaconda_navigator/static/images/anaconda-icon-256x256.png Comment=Open Anaconda Navigator Terminal=false Copy this file to your application folder cp anaconda-navigator.desktop ~/.local/share/applications/ Now you'll see your Anaconda navigator on your application menu/list","title":"Step-by-step process"},{"location":"ubuntu/How_to_install_ROS/","text":"How_to_install_ROS \u00b6 Use the bash_commands/installation/ros_install.sh to install ROS: # install ROS ## Setup your sources.list sudo sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/ros-latest.list' ## Set up your keys sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654 ## update souce sudo apt update ## install ROS noetic sudo apt install ros-noetic-desktop-full ## setup environment source /opt/ros/noetic/setup.bash echo \"source /opt/ros/noetic/setup.bash\" >> ~/.bashrc source ~/.bashrc ## install package dependency sudo apt install python3-rosdep python3-rosinstall python3-rosinstall-generator python3-wstool build-essential # sudo apt-get install build-essential ## initialize rosdep sudo rosdep init rosdep update # bug fix # https://blog.csdn.net/tom17/article/details/107748686 # Command \u2018roscore\u2019 not found, but can be installed with: # sudo apt install python-roslaunch # sudo apt-get install ros-noetic-desktop","title":"How to install ROS"},{"location":"ubuntu/How_to_install_ROS/#how_to_install_ros","text":"Use the bash_commands/installation/ros_install.sh to install ROS: # install ROS ## Setup your sources.list sudo sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/ros-latest.list' ## Set up your keys sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654 ## update souce sudo apt update ## install ROS noetic sudo apt install ros-noetic-desktop-full ## setup environment source /opt/ros/noetic/setup.bash echo \"source /opt/ros/noetic/setup.bash\" >> ~/.bashrc source ~/.bashrc ## install package dependency sudo apt install python3-rosdep python3-rosinstall python3-rosinstall-generator python3-wstool build-essential # sudo apt-get install build-essential ## initialize rosdep sudo rosdep init rosdep update # bug fix # https://blog.csdn.net/tom17/article/details/107748686 # Command \u2018roscore\u2019 not found, but can be installed with: # sudo apt install python-roslaunch # sudo apt-get install ros-noetic-desktop","title":"How_to_install_ROS"},{"location":"ubuntu/How_to_setup_new_ubuntu/","text":"How_to_setup_New_Ubunutu \u00b6 Use the bash_commands/installation/ubuntu_installation.sh to install software on the new Ubuntu Laptop: #!/bin/bash # install script for UBUNUT 20.04 cd ~ sudo apt-get update sudo apt upgrade # remove apport pop-up windows sudo apt remove apport apport-gtk # install synaptic package manager sudo apt-get install synaptic sudo apt-get update # install git sudo add-apt-repository ppa:git-core/ppa sudo apt update sudo apt install git # install chrome sudo apt update sudo apt upgrade cd Downloads wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb sudo dpkg -i google-chrome-stable_current_amd64.deb # install gitkraken wget https://release.gitkraken.com/linux/gitkraken-amd64.deb sudo dpkg -i gitkraken-amd64.deb # install typora wget -qO - https://typora.io/linux/public-key.asc | sudo apt-key add - sudo add-apt-repository 'deb https://typora.io/linux ./' sudo apt-get update sudo apt-get install typora # install terminator sudo apt-get update sudo apt-get install terminator # install tweaks sudo add-apt-repository universe sudo apt install gnome-tweak-tool sudo apt install gnome-shell-extensions # dash-to-dock # in the fire fox web browser: # install Gnome extensions # https://extensions.gnome.org/extension/307/dash-to-dock/ # install media player sudo snap install vlc # install notion sudo snap install notion-snap # install java sudo apt install default-jre sudo apt install default-jdk # install pycharm sudo snap install pycharm-professional --classic # install clion sudo snap install clion --classic","title":"How to setup New Ubunutu"},{"location":"ubuntu/How_to_setup_new_ubuntu/#how_to_setup_new_ubunutu","text":"Use the bash_commands/installation/ubuntu_installation.sh to install software on the new Ubuntu Laptop: #!/bin/bash # install script for UBUNUT 20.04 cd ~ sudo apt-get update sudo apt upgrade # remove apport pop-up windows sudo apt remove apport apport-gtk # install synaptic package manager sudo apt-get install synaptic sudo apt-get update # install git sudo add-apt-repository ppa:git-core/ppa sudo apt update sudo apt install git # install chrome sudo apt update sudo apt upgrade cd Downloads wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb sudo dpkg -i google-chrome-stable_current_amd64.deb # install gitkraken wget https://release.gitkraken.com/linux/gitkraken-amd64.deb sudo dpkg -i gitkraken-amd64.deb # install typora wget -qO - https://typora.io/linux/public-key.asc | sudo apt-key add - sudo add-apt-repository 'deb https://typora.io/linux ./' sudo apt-get update sudo apt-get install typora # install terminator sudo apt-get update sudo apt-get install terminator # install tweaks sudo add-apt-repository universe sudo apt install gnome-tweak-tool sudo apt install gnome-shell-extensions # dash-to-dock # in the fire fox web browser: # install Gnome extensions # https://extensions.gnome.org/extension/307/dash-to-dock/ # install media player sudo snap install vlc # install notion sudo snap install notion-snap # install java sudo apt install default-jre sudo apt install default-jdk # install pycharm sudo snap install pycharm-professional --classic # install clion sudo snap install clion --classic","title":"How_to_setup_New_Ubunutu"},{"location":"ubuntu/Touchpad_support_gesture/","text":"How to make touchpad support gesture \u00b6 Step 1: setup fusuma \u00b6 Go to the fusuma website one thing to note is that when you install Ruby you may also need to install ruby-dev Step 2: create a config.yml file \u00b6 mkdir ~/.config/fusuma gedit config.yml config.yml swipe: 3: left: command: 'xdotool key super+Left' \u3000# View split to left right: command: 'xdotool key super+Right' # View split to right up: command: \"xdotool key super\" # show all windows down: command: \"xdotool key super+h\" # Hide current window 4: up: command: \"xdotool key super+a\" # show all applications down: command: \"xdotool key super+d\" # show desktop right: command: 'xdotool key ctrl+alt+Up' # To previous workspace left: command: 'xdotool key ctrl+alt+Down' # To next workspace pinch: 2: in: command: 'xdotool key super+Up' out: command: 'xdotool key super+Down' threshold: swipe: 0.3 pinch: 0.1 interval: swipe: 1 pinch: 1 Step 3: create fusuma desktop icon \u00b6 under /usr/share/applications , create a fusuma.desktop document: [Desktop Entry] Encoding=UTF-8 Name=fusuma Comment=fusuma Exec=/usr/local/bin/fusuma Icon=/home/zhaoliang/Pictures/fusuma_icon.png Terminal=false #activate terminal or not when open the software, chose \"false\" StartupNotify=false Type=Application Categories=Application; the icon here you can use the following github icon: Step 4: setup autostart \u00b6 Method 1: \u00b6 install a software call GNOME Tweaks, and add fusuma as: Method 2: \u00b6 Check the path where you installed fusuma with $ which fusuma Open $ gnome-session-properties Add Fusuma and enter the location where the above path was checked in the command input field Add the -d option at the end of the command input field as in below. Step 5: reboot your computer \u00b6","title":"Touchpad_support_gesture"},{"location":"ubuntu/Touchpad_support_gesture/#how-to-make-touchpad-support-gesture","text":"","title":"How to make touchpad support gesture"},{"location":"ubuntu/Touchpad_support_gesture/#step-1-setup-fusuma","text":"Go to the fusuma website one thing to note is that when you install Ruby you may also need to install ruby-dev","title":"Step 1: setup fusuma"},{"location":"ubuntu/Touchpad_support_gesture/#step-2-create-a-configyml-file","text":"mkdir ~/.config/fusuma gedit config.yml config.yml swipe: 3: left: command: 'xdotool key super+Left' \u3000# View split to left right: command: 'xdotool key super+Right' # View split to right up: command: \"xdotool key super\" # show all windows down: command: \"xdotool key super+h\" # Hide current window 4: up: command: \"xdotool key super+a\" # show all applications down: command: \"xdotool key super+d\" # show desktop right: command: 'xdotool key ctrl+alt+Up' # To previous workspace left: command: 'xdotool key ctrl+alt+Down' # To next workspace pinch: 2: in: command: 'xdotool key super+Up' out: command: 'xdotool key super+Down' threshold: swipe: 0.3 pinch: 0.1 interval: swipe: 1 pinch: 1","title":"Step 2: create a config.yml file"},{"location":"ubuntu/Touchpad_support_gesture/#step-3-create-fusuma-desktop-icon","text":"under /usr/share/applications , create a fusuma.desktop document: [Desktop Entry] Encoding=UTF-8 Name=fusuma Comment=fusuma Exec=/usr/local/bin/fusuma Icon=/home/zhaoliang/Pictures/fusuma_icon.png Terminal=false #activate terminal or not when open the software, chose \"false\" StartupNotify=false Type=Application Categories=Application; the icon here you can use the following github icon:","title":"Step 3: create fusuma desktop icon"},{"location":"ubuntu/Touchpad_support_gesture/#step-4-setup-autostart","text":"","title":"Step 4: setup autostart"},{"location":"ubuntu/Touchpad_support_gesture/#method-1","text":"install a software call GNOME Tweaks, and add fusuma as:","title":"Method 1:"},{"location":"ubuntu/Touchpad_support_gesture/#method-2","text":"Check the path where you installed fusuma with $ which fusuma Open $ gnome-session-properties Add Fusuma and enter the location where the above path was checked in the command input field Add the -d option at the end of the command input field as in below.","title":"Method 2:"},{"location":"ubuntu/Touchpad_support_gesture/#step-5-reboot-your-computer","text":"","title":"Step 5: reboot your computer"}]}